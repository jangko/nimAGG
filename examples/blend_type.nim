import agg/[pixfmt_rgba, comp_op, color_rgba, rendering_buffer]

type
  CompAdaptorA32 = CompAdaptorRgba[BlenderRgba32]
  CompAdaptorB32 = CompAdaptorClipToDstRgba[BlenderRgba32]
  CompAdaptorC32 = CompAdaptorClipToDstRgbaPre[BlenderRgba32]
  CompAdaptorD32 = CompAdaptorRgba[BlenderRgba32Pre]
  CompAdaptorE32 = CompAdaptorClipToDstRgba[BlenderRgba32Pre]
  CompAdaptorF32 = CompAdaptorClipToDstRgbaPre[BlenderRgba32Pre]
  CompAdaptorG32 = CompAdaptorRgba[BlenderRgba32Plain]
  CompAdaptorH32 = CompAdaptorClipToDstRgba[BlenderRgba32Plain]
  CompAdaptorI32 = CompAdaptorClipToDstRgbaPre[BlenderRgba32Plain]
  CompAdaptorJ32 = CompOpAdaptorRgba[Rgba8, OrderRgba]
  CompAdaptorK32 = CompOpAdaptorClipToDstRgba[Rgba8, OrderRgba]
  CompAdaptorL32 = CompOpAdaptorRgbaPre[Rgba8, OrderRgba]
  CompAdaptorM32 = CompOpAdaptorClipToDstRgbaPre[Rgba8, OrderRgba]

  CustomBlendA32* = PixfmtCustomBlendRgba[CompAdaptorA32, RenderingBuffer]
  CustomBlendB32* = PixfmtCustomBlendRgba[CompAdaptorB32, RenderingBuffer]
  CustomBlendC32* = PixfmtCustomBlendRgba[CompAdaptorC32, RenderingBuffer]
  CustomBlendD32* = PixfmtCustomBlendRgba[CompAdaptorD32, RenderingBuffer]
  CustomBlendE32* = PixfmtCustomBlendRgba[CompAdaptorE32, RenderingBuffer]
  CustomBlendF32* = PixfmtCustomBlendRgba[CompAdaptorF32, RenderingBuffer]
  CustomBlendG32* = PixfmtCustomBlendRgba[CompAdaptorG32, RenderingBuffer]
  CustomBlendH32* = PixfmtCustomBlendRgba[CompAdaptorH32, RenderingBuffer]
  CustomBlendI32* = PixfmtCustomBlendRgba[CompAdaptorI32, RenderingBuffer]
  CustomBlendJ32* = PixfmtCustomBlendRgba[CompAdaptorJ32, RenderingBuffer]
  CustomBlendK32* = PixfmtCustomBlendRgba[CompAdaptorK32, RenderingBuffer]
  CustomBlendL32* = PixfmtCustomBlendRgba[CompAdaptorL32, RenderingBuffer]
  CustomBlendM32* = PixfmtCustomBlendRgba[CompAdaptorM32, RenderingBuffer]

  CompAdaptorA64 = CompAdaptorRgba[BlenderRgba64]
  CompAdaptorB64 = CompAdaptorClipToDstRgba[BlenderRgba64]
  CompAdaptorC64 = CompAdaptorClipToDstRgbaPre[BlenderRgba64]
  CompAdaptorD64 = CompAdaptorRgba[BlenderRgba64Pre]
  CompAdaptorE64 = CompAdaptorClipToDstRgba[BlenderRgba64Pre]
  CompAdaptorF64 = CompAdaptorClipToDstRgbaPre[BlenderRgba64Pre]
  CompAdaptorG64 = CompOpAdaptorRgba[Rgba16, OrderRgba]
  CompAdaptorH64 = CompOpAdaptorClipToDstRgba[Rgba16, OrderRgba]
  CompAdaptorI64 = CompOpAdaptorRgbaPre[Rgba16, OrderRgba]
  CompAdaptorJ64 = CompOpAdaptorClipToDstRgbaPre[Rgba16, OrderRgba]

  CustomBlendA64* = PixfmtCustomBlendRgba[CompAdaptorA64, RenderingBuffer16]
  CustomBlendB64* = PixfmtCustomBlendRgba[CompAdaptorB64, RenderingBuffer16]
  CustomBlendC64* = PixfmtCustomBlendRgba[CompAdaptorC64, RenderingBuffer16]
  CustomBlendD64* = PixfmtCustomBlendRgba[CompAdaptorD64, RenderingBuffer16]
  CustomBlendE64* = PixfmtCustomBlendRgba[CompAdaptorE64, RenderingBuffer16]
  CustomBlendF64* = PixfmtCustomBlendRgba[CompAdaptorF64, RenderingBuffer16]
  CustomBlendG64* = PixfmtCustomBlendRgba[CompAdaptorG64, RenderingBuffer16]
  CustomBlendH64* = PixfmtCustomBlendRgba[CompAdaptorH64, RenderingBuffer16]
  CustomBlendI64* = PixfmtCustomBlendRgba[CompAdaptorI64, RenderingBuffer16]
  CustomBlendJ64* = PixfmtCustomBlendRgba[CompAdaptorJ64, RenderingBuffer16]