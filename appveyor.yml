version: '{build}'

cache:
- x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z

matrix:
  fast_finish: true

environment:
  matrix:
    - MINGW_DIR: mingw64
      MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/4.9.2/threads-win32/seh/x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z/download
      MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z
      platform: x64

install:
  - MKDIR %CD%\DIST
  - IF not exist "%MINGW_ARCHIVE%" appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - 7z x -y "%MINGW_ARCHIVE%" -o"%CD%\DIST"> nul
  - SET PATH=%CD%\DIST\%MINGW_DIR%\BIN;%CD%\BIN;%PATH%
  - git clone --depth 1 https://github.com/nim-lang/csources
  - cd csources
  - IF "%PLATFORM%" == "x64" ( build64.bat > nul ) else ( build.bat > nul )
  - cd ..
  - git clone --depth 1 https://github.com/nim-lang/Nim.git
  - copy %CD%\csources\bin\nim.exe %CD%\Nim\bin\nim.exe
  - IF "%PLATFORM%" == "x64" ( copy C:\OpenSSL-Win64\libeay32.dll %CD%\Nim\bin\libeay64.dll & copy C:\OpenSSL-Win64\libeay32.dll %CD%\Nim\bin\libeay32.dll & copy C:\OpenSSL-Win64\libssl32.dll %CD%\Nim\bin\libssl64.dll & copy C:\OpenSSL-Win64\libssl32.dll %CD%\Nim\bin\libssl32.dll )
    ELSE ( copy C:\OpenSSL-Win32\libeay32.dll %CD%\Nim\bin\libeay32.dll & copy C:\OpenSSL-Win32\libssl32.dll %CD%\Nim\bin\libssl32.dll )

build_script:
  - SET PATH=%CD%\Nim\bin;%PATH%
  - cd Nim
  - nim c -d:release --verbosity:0 --hints:off koch
  - koch boot -d:release --verbosity:0 --hints:off
  - koch nimble
  # - git clone https://github.com/nim-lang/nimble.git dist/nimble
  # - cd dist\nimble
  # - git checkout -f stable
  # - git pull
  # - cd ..\..
  # - nim c dist\nimble\src\nimble.nim
  # - copy dist\nimble\src\nimble.exe bin\nimble.exe
  - cd ..
  - nimble refresh
  - nimble install nimBMP
  - nimble install polyBool
  - nimble install freetype

test_script:
  - cd examples
  - nim e build.nims
  - nim e -d:release build.nims
  - test_color_conv.bat

deploy: off
